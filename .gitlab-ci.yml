image: maven:3.6.2-jdk-8

variables:
  MAVEN_CLI_OPTS: "-s settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  paths:
    - .m2/repository/
    - target/
  key: "$CI_PIPELINE_ID"
  untracked: true

stages:
  - build
  - test
  - build-image
  - deploy

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS compile -P ci-snapshot,attach-sources,attach-javadocs

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test -P ci-snapshot,attach-sources,attach-javadocs

deploy-snapshot:
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy -P ci-snapshot,deploy-snapshot,attach-sources,attach-javadocs
  only:
    - develop
    - development
  artifacts:
    when: on_success
    expire_in: 1 week
    paths:
      - target/*.jar

deploy-release:
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy -P ci-release,deploy-release,attach-sources,attach-javadocs
  only:
    - master
  artifacts:
    when: on_success
    expire_in: 1 month
    paths:
      - target/*.jar

#######################################################
#####          Update WarGear Fight Image         #####
#######################################################

update_base_image:
  image: registry.gitlab.com/myplayplanet/docker-images/docker_image/master/docker_image:latest
  stage: build-image
  script:
    - mvn $MAVEN_CLI_OPTS install
    - mkdir -p fight_server_image
    - git clone --branch ${CI_COMMIT_REF_NAME} http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/MyPlayPlanet/Docker-Images/fight_server_image.git fight_server_image/
    - find WarGear/target/. -type f -a ! -name 'original*' ! -name '*sources.jar' ! -name '*javadoc.jar' -name '*.jar' -exec cp '{}' fight_server_image/plugins/ \;
    - cd fight_server_image/
    - git pull --all
    - find plugins/. -type f -a -name 'WorldFuscator-WarGear-latest.jar' -exec rm '{}' \;
    - find plugins/. -type f -a -name 'WorldFuscator-WarGear*.jar' -exec mv '{}' 'plugins/WorldFuscator-WarGear-latest.jar' \;
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git add --all
    - git commit -m "Updated WarshipFight!"
    - git push http://${GITLAB_USER_LOGIN}:${PERSONAL_ACCESS_TOKEN}@gitlab.com/MyPlayPlanet/Docker-Images/warship_fight_image.git HEAD:${CI_COMMIT_REF_NAME}
  only:
    - test
    - develop
    - master
